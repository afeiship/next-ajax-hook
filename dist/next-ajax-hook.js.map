{"version":3,"sources":["next-ajax-hook.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-ajax-hook.js","sourcesContent":["(function() {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('next-js-core2');\n  var REAL_XHR = '__RealXMLHttpRequest__';\n  var DEFAULT_PROPXY = { properties: null, methods: null, events: null };\n\n  var NxAjaxHook = nx.declare('nx.AjaxHook', {\n    statics: {\n      _proxy: null,\n      on: function(inProxy) {\n        var proxy = nx.mix(null, DEFAULT_PROPXY, inProxy || this._proxy);\n        this.proxy = proxy;\n        global[REAL_XHR] = global[REAL_XHR] || global.XMLHttpRequest;\n        global.XMLHttpRequest = function() {\n          var xhr = new global[REAL_XHR]();\n          var properties = proxy.properties;\n          var methods = proxy.methods;\n          var events = proxy.events;\n          var overrides = nx.mix(null, properties, methods);\n\n          nx.forIn(overrides, function(key, value) {\n            nx.defineProperty(xhr, key, value);\n          });\n\n          nx.forIn(events, function(key, value) {\n            xhr.addEventListener(key, value);\n          });\n\n          return xhr;\n        };\n      },\n      off: function() {\n        global[REAL_XHR] && (global.XMLHttpRequest = global[REAL_XHR]);\n      }\n    }\n  });\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxAjaxHook;\n  }\n})();\n"]}